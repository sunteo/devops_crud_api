name: CD Sandbox (GHCR)

on:
  workflow_dispatch: {}      
  pull_request:              
    branches: [ main ]

jobs:
  build_pr:
    name: Build & Push PR image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Lowercase repo path
        id: repo
        run: echo "full=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build PR image (tag pr-<sha>)
        env:
          IMAGE: ghcr.io/${{ steps.repo.outputs.full }}
          SHA:   ${{ github.sha }}
        run: |
          docker build -t "$IMAGE:pr-$SHA" .
          docker push  "$IMAGE:pr-$SHA"

  deploy_pr:
    name: Deploy PR to local sandbox
    runs-on: [self-hosted, linux, x64]
    needs: build_pr
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Prepare .env (optional)
        run: |
          [ -f .env ] || { [ -f .env.sample ] && cp .env.sample .env || true; }

      - name: Login to GHCR
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io \
            -u "${{ secrets.GHCR_USER }}" --password-stdin

      - name: Set sandbox vars
        run: |
          echo "TAG=pr-${GITHUB_SHA}" >> $GITHUB_ENV
          echo "COMPOSE_PROJECT_NAME=devops_pet_sandbox" >> $GITHUB_ENV
          echo "PORT=18080" >> $GITHUB_ENV 

      - name: Down old sandbox
        run: docker compose -p devops_pet_sandbox -f docker-compose.yml down -v || true

      - name: Set sandbox vars
        run: |
          echo "COMPOSE_PROJECT_NAME=devops_pet_sandbox" >> $GITHUB_ENV
          echo "PORT=18080"        >> $GITHUB_ENV
          echo "PROM_PORT=19090"   >> $GITHUB_ENV 
          echo "TAG=pr-${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Pull & Up (sandbox stack)
        env:
          TAG: ${{ env.TAG }}
          COMPOSE_PROJECT_NAME: ${{ env.COMPOSE_PROJECT_NAME }}
          PORT: ${{ env.PORT }}
        run: |
          docker compose -f docker-compose.yml pull
          docker compose -f docker-compose.yml up -d
          docker compose -f docker-compose.yml ps

      - name: Health checks (sandbox)
        env:
          PORT: ${{ env.PORT }}
        run: |
          for i in {1..30}; do
            curl -fsS --max-time 3 "http://127.0.0.1:${PORT}/healthz" && break
            sleep 1; [ $i -eq 30 ] && exit 1
          done
          for i in {1..30}; do
            RESP="$(curl -fsS --max-time 3 "http://127.0.0.1:${PORT}/dbcheck" || true)"
            echo "$RESP" | grep -q '"db":"ok"' && break
            sleep 1; [ $i -eq 30 ] && exit 1
          done

