name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pytest

      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q

  smoke:
    name: Smoke run.sh
    runs-on: ubuntu-latest
    needs: test
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) ||
      (github.event_name == 'workflow_dispatch')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect important changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            important:
              - 'app/**'
              - 'docker/**'
              - 'monitoring/**'
              - 'Dockerfile'
              - 'docker-compose.yml'
              - 'run.sh'

      - name: Skip smoke
        if: steps.changes.outputs.important != 'true' && github.event_name != 'workflow_dispatch'
        run: echo "No important changes â€” skipping smoke."

      - name: Docker versions
        if: steps.changes.outputs.important == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          docker version
          docker compose version

      - name: Make run.sh executable
        if: steps.changes.outputs.important == 'true' || github.event_name == 'workflow_dispatch'
        run: chmod +x ./run.sh

      - name: Prepare .env
        if: steps.changes.outputs.important == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          [ -f .env ] || { [ -f .env.sample ] && cp .env.sample .env || true; }

      - name: Run smoke
        if: steps.changes.outputs.important == 'true' || github.event_name == 'workflow_dispatch'
        run: ./run.sh

      - name: Compose logs (always)
        if: always()
        run: |
          docker compose ps || true
          docker compose logs --no-color || true
          docker compose down -v || true

